name: Windows Release

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'

defaults:
  run:
    shell: cmd

env:
  PROG:         qt-github-actions
  SOURCE_DIR:   ${{ github.workspace }}
  BUILD_DIR:    ${{ github.workspace }}\build
  DEPLOY_DIR:   ${{ github.workspace }}\${{ env.PROG }}
  EXECUTABLE:   ${{ env.BUILD_DIR }}\release\${{ env.PROG }}\${{ env.PROG }}.exe

jobs:
  build:
    runs-on: windows-2019

    steps:
      - name: (1) Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: (2) Get all tags for correct version determination
        working-directory: ${{ env.SOURCE_DIR }}
        run:  |
              git fetch --all --tags -f

      - name: (3) Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion:   '==3.1.*'
          version:      '5.15.2'
          host:         'windows'
          target:       'desktop'
          arch:         'win64_mingw81'
          cache:        true
          setup-python: false

      - name: (4) Prepare directories
        working-directory: ${{ env.SOURCE_DIR }}
        run:  |
              mkdir ${{ env.BUILD_DIR }}
              mkdir ${{ env.DEPLOY_DIR }}

      - name: (5) Build
        working-directory: ${{ env.BUILD_DIR }}
        run:  |
              qmake CONFIG+=release ${{ env.SOURCE_DIR }}
              mingw32-make
              
      - name: (6) Deploy
        working-directory: ${{ env.DEPLOY_DIR }}
        run:  |
              copy ${{ env.EXECUTABLE }} .
              windeployqt --dir . ${{ env.EXECUTABLE }} --compiler-runtime --no-translations --no-system-d3d-compiler --no-opengl-sw --no-angle

      - name: (7) Save build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PROG }}-${{ github.ref_name }}-win
          path: ${{ env.DEPLOY_DIR }}





